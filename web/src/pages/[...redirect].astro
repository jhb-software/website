---
// This file is excluded from Astro's type checking (see comment above redirectPath)
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-nocheck

import { defaultLocale, locales } from '../cms/locales'
import type { Locale } from '../cms/types'

export const prerender = false

const { headers } = Astro.request
const { pathname } = Astro.url

// This file is called on routes that are not matched the predefined routes (e.g. /[lang]/[...path])

// handle url paths that are not files
if (!pathname.includes('.')) {
  // redirect / to /[lang] or /preview to /preview/[lang]
  if (pathname === '/' || pathname === '/preview') {
    const userLang = headers.get('accept-language')?.slice(0, 2) as Locale | undefined
    const langPath = userLang && locales.includes(userLang) ? `/${userLang}` : `/${defaultLocale}`

    // Because of a bug in 'astro check' the following line is flagged as 'unused value' even though it is used
    // see https://github.com/withastro/language-tools/issues/980
    const redirectPath = `${pathname === '/preview' ? '/preview' : ''}${langPath}`

    return Astro.redirect(redirectPath, 302)
  }
}

// handle unknown paths
return Astro.redirect(pathname, 404)
---
