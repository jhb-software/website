---
import type {
  AboutBlock as AboutBlockType,
  ArticlesBlock as ArticlesBlockType,
  AuthorsBlock as AuthorsBlockType,
  ContactBlock as ContactBlockType,
  CustomerLogosBlock as CustomerLogosBlockType,
  FeaturedProjectsListBlock as FeaturedProjectsListBlockType,
  Page,
  PhilosophyBlock as PhilosophyBlockType,
  ProjectsListBlock as ProjectsListBlockType,
  RichTextBlock as RichTextBlockType,
  ServicesBlock as ServicesBlockType,
  TestimonialsBlock as TestimonialsBlockType,
} from 'cms/src/payload-types'
import AboutBlock from './blocks/AboutBlock.astro'
import ArticlesBlock from './blocks/ArticlesBlock.astro'
import AuthorsListBlock from './blocks/AuthorsListBlock.astro'
import ContactBlock from './blocks/ContactBlock.astro'
import CustomerLogosBlock from './blocks/CustomerLogosBlock.astro'
import FeaturedProjectsListBlock from './blocks/FeaturedProjectsListBlock.astro'
import PhilosophyBlock from './blocks/PhilosophyBlock.astro'
import ProjectsListBlock from './blocks/ProjectsListBlock.astro'
import RichTextBlock from './blocks/RichTextBlock/RichTextBlock.astro'
import ServicesBlock from './blocks/ServicesBlock.astro'
import TestimonialsBlock from './blocks/TestimonialsBlock.astro'
export type Props = NonNullable<NonNullable<Page['sections']>[number]['blocks']>[number]

const { blockType, ...props } = Astro.props
---

{
  () => {
    switch (blockType) {
      case 'rich-text':
        return <RichTextBlock {...(props as RichTextBlockType)} />
      case 'services':
        return <ServicesBlock {...(props as ServicesBlockType)} />
      case 'testimonials':
        return <TestimonialsBlock {...(props as TestimonialsBlockType)} />
      case 'customer-logos':
        return <CustomerLogosBlock {...(props as CustomerLogosBlockType)} />
      case 'featured-projects-list':
        return <FeaturedProjectsListBlock {...(props as FeaturedProjectsListBlockType)} />
      case 'projects-list':
        return <ProjectsListBlock {...(props as ProjectsListBlockType)} />
      case 'articles':
        return <ArticlesBlock {...(props as ArticlesBlockType)} />
      case 'about':
        return <AboutBlock {...(props as AboutBlockType)} />
      case 'philosophy':
        return <PhilosophyBlock {...(props as PhilosophyBlockType)} />
      case 'authors':
        return <AuthorsListBlock {...(props as AuthorsBlockType)} />
      case 'contact':
        return <ContactBlock {...(props as ContactBlockType)} />
      default:
        throw new Error('Block type not implemented: ' + blockType)
    }
  }
}
