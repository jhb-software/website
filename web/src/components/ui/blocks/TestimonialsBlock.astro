---
import { globalState } from '@/globalState'
import type { Testimonial, TestimonialsBlock } from 'cms/src/payload-types'
import TestimonialCard from '../TestimonialCard.astro'

export type Props = TestimonialsBlock

const { testimonials } = Astro.props
const { translations } = globalState
---

<div class="group relative" id="testimonials-container" data-expanded={false}>
  <div
    class:list={[
      'space-y-5',
      'group-data-[expanded=false]:mask-b-from-60%',
      'group-data-[expanded=false]:h-[33rem]',
      'overflow-y-hidden',
      'relative',
    ]}
  >
    <div class="columns-1 gap-5 space-y-5 sm:columns-2 lg:columns-3">
      {
        testimonials?.map((testimonial) => (
          <div class="inline-block w-full break-inside-avoid">
            <TestimonialCard {...(testimonial as Testimonial)} />
          </div>
        ))
      }
    </div>
  </div>

  <div
    class:list={[
      'pointer-events-none absolute inset-x-0 bottom-0 justify-center',
      'flex group-data-[expanded=true]:hidden',
      'pt-32 pb-8',
    ]}
  >
    <button
      class="bg-primary pointer-events-auto relative translate-y-4 cursor-pointer rounded-md px-4 py-3 text-sm font-semibold text-white no-underline"
    >
      {translations.global['show-more']}
    </button>
  </div>
</div>

<script>
  const container = document.querySelector('#testimonials-container')
  const button = container?.querySelector('button')

  if (container && button) {
    button.addEventListener('click', () => {
      const isExpanded = container.getAttribute('data-expanded') === 'true'
      container.setAttribute('data-expanded', (!isExpanded).toString())
    })
  }
</script>
