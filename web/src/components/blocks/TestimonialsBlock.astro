---
import { payloadSDK } from '@/cms/sdk'
import Icon from '@/components/icons/Icon.astro'
import { globalState } from '@/globalState'
import type { Project, Testimonial, TestimonialsBlock } from 'cms/src/payload-types'
import TestimonialCard from '../cards/TestimonialCard.astro'

export type Props = TestimonialsBlock

const { testimonials } = Astro.props
const { translations, locale } = globalState

// Fetching the customers is necessary since the customer is not populated because the pages are fetched with depth 1
// When migrating to GraphQL or the REST select API, this will be resolved.
const customers = await payloadSDK.find({
  collection: 'customers',
  locale: locale,
  draft: false,
  limit: 0,
  pagination: false,
})

const populatedTestimonials = testimonials?.map((testimonial) => {
  if (typeof testimonial === 'string') {
    return testimonial
  }

  return {
    ...testimonial,
    project: {
      ...(typeof testimonial.project === 'object' ? testimonial.project : {}),
      customer:
        typeof testimonial.project === 'object' && typeof testimonial.project.customer === 'string'
          ? customers.docs.find(
              (customer) => customer.id === (testimonial.project as Project).customer,
            )
          : undefined,
    },
  }
})
---

<div class="group relative" id="testimonials-container" data-expanded={false}>
  <div
    class:list={[
      'space-y-5',
      'group-data-[expanded=false]:mask-b-from-60%',
      'group-data-[expanded=false]:h-[33rem]',
      'overflow-y-hidden',
      'relative',
    ]}
  >
    <div class="columns-1 gap-5 space-y-5 sm:columns-2 lg:columns-3">
      {
        populatedTestimonials?.map((testimonial) => (
          <div class="inline-block w-full break-inside-avoid">
            <TestimonialCard {...(testimonial as Testimonial)} />
          </div>
        ))
      }
    </div>
  </div>

  <div
    class:list={[
      'pointer-events-none absolute inset-x-0 bottom-0 justify-center',
      'flex group-data-[expanded=true]:hidden',
      'pt-32 pb-8',
    ]}
  >
    <button
      class="bg-primary pointer-events-auto relative flex translate-y-4 cursor-pointer items-center gap-3 rounded-md px-4 py-3 text-sm font-semibold text-white no-underline"
    >
      {translations.global['show-more']}
      <Icon name="chevron-down" class:list={['h-3 w-3']} />
    </button>
  </div>
</div>

<script>
  function setupTestimonials() {
    const container = document.querySelector('#testimonials-container')
    const button = container?.querySelector('button')

    if (container && button) {
      button.addEventListener('click', () => {
        const isExpanded = container.getAttribute('data-expanded') === 'true'
        container.setAttribute('data-expanded', (!isExpanded).toString())
      })
    }
  }

  // Run setup function on the initial and any subsequent page loads due to navigation
  // https://docs.astro.build/en/guides/view-transitions/#astropage-load
  document.addEventListener('astro:page-load', setupTestimonials)
</script>
