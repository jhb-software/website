---
import type { PageData } from '@/cms/getPageData'
import ArticleTagsList from '@/components/ui/ArticleTagsList.astro'
import RichTextBlock from '@/components/ui/blocks/RichTextBlock/RichTextBlock.astro'
import BreadcrumbsBlock from '@/components/ui/Breadcrumbs.astro'
import Img from '@/components/ui/Img.astro'
import { globalState } from '@/globalState'
import SectionShell from '@/layout/SectionShell.astro'
import { normalizePath } from '@/utils/normalizePath'
import type { Author, Breadcrumbs, Media } from 'cms/src/payload-types'

type Props = {
  article: PageData['articles']
  breadcrumbs: Breadcrumbs
}

const { article, breadcrumbs } = Astro.props
const { locale, preview, translations } = globalState
---

<SectionShell>
  {breadcrumbs && <BreadcrumbsBlock crumbs={breadcrumbs} />}
  <h1 class="mt-4 text-center text-4xl font-extrabold text-balance text-slate-700">
    {article.title}
  </h1>

  <ArticleTagsList tags={article.tags} class="my-4 flex flex-row items-center justify-center" />

  <div class="mt-4 mb-12 flex flex-row items-center justify-center gap-4">
    <div class="flex flex-shrink-0 -space-x-6">
      {
        (article.authors as Author[]).map((author) => (
          <div class="h-16 w-16 flex-shrink-0">
            <a href={normalizePath(author.path, preview)}>
              <Img
                image={(author as Author).photo as Media}
                size="sm"
                class="inline-block aspect-square !h-16 !w-16 rounded-full ring-2 ring-white"
              />
            </a>
          </div>
        ))
      }
    </div>

    <div class="flex flex-col items-start gap-1 text-sm text-slate-700">
      <p>
        {translations.articles['written-by']}{'  '}
        {
          (article.authors as Author[]).map((author, index) => (
            <>
              {index > 0 && (index === article.authors.length - 1 ? ' & ' : ', ')}
              <a
                class="text-primary inline-block text-nowrap underline"
                href={normalizePath(author.path, preview)}
              >
                {author.name}
              </a>
            </>
          ))
        }
      </p>

      <p>
        {translations.articles['last-updated-at']}{'  '}
        {
          new Date(article.updatedAt).toLocaleDateString(locale, {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })
        }
      </p>
    </div>
  </div>

  <Img image={article.image as Media} size="xl" class="mx-auto my-8 w-full max-w-4xl rounded-xl" />

  <RichTextBlock text={article.content} />
</SectionShell>
