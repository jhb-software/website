/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Breadcrumbs".
 */
export type Breadcrumbs = {
  slug: string;
  path: string;
  label: string;
  id?: string | null;
}[];

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    projects: Project;
    articles: Article;
    customers: Customer;
    testimonials: Testimonial;
    media: Media;
    redirects: Redirect;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'de' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  slug: string;
  parent?: (number | null) | Page;
  path: string;
  breadcrumbs: Breadcrumbs;
  title: string;
  hero: {
    title: string;
    subtitle: string;
    links?:
      | {
          page: {
            relationTo: 'pages';
            value: number | Page;
          };
          label: string;
          id?: string | null;
        }[]
      | null;
  };
  sections?:
    | {
        title: string;
        subTitle?: string | null;
        blocks?:
          | (
              | RichTextBlock
              | ServicesBlock
              | TestimonialsBlock
              | CustomerLogosBlock
              | FeaturedProjectsListBlock
              | ProjectsListBlock
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  meta: SeoMetadata;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock".
 */
export interface RichTextBlock {
  text: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'rich-text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock".
 */
export interface ServicesBlock {
  services?:
    | {
        title: string;
        description: string;
        page: number | Page;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'services';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  testimonials: (number | Testimonial)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  project: number | Project;
  title: string;
  author: {
    name: string;
    image: number | Media;
  };
  text: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  slug: string;
  parent: number | Page;
  path: string;
  breadcrumbs: Breadcrumbs;
  customer: number | Customer;
  startDate: string;
  endDate?: string | null;
  featured: boolean;
  title: string;
  excerpt: string;
  tags: ('web-app' | 'website' | 'app' | 'seo')[];
  image: number | Media;
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta: SeoMetadata;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  websiteUrl: string;
  name: string;
  excerpt: string;
  logo: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  cloudinaryPublicId?: string | null;
  cloudinaryURL?: string | null;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SeoMetadata".
 */
export interface SeoMetadata {
  keywords: {
    keyword: string;
    id?: string | null;
  }[];
  title?: string | null;
  description?: string | null;
  image?: (number | null) | Media;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CustomerLogosBlock".
 */
export interface CustomerLogosBlock {
  customers: (number | Customer)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'customer-logos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedProjectsListBlock".
 */
export interface FeaturedProjectsListBlock {
  projects: (number | Project)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'featured-projects-list';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProjectsListBlock".
 */
export interface ProjectsListBlock {
  projects: (number | Project)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'projects-list';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number;
  slug: string;
  parent: number | Page;
  path: string;
  breadcrumbs: Breadcrumbs;
  title: string;
  excerpt: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  sourcePath: string;
  destinationPath: string;
  type: 'permanent' | 'temporary';
  reason?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'articles';
        value: number | Article;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  slug?: T;
  parent?: T;
  path?: T;
  breadcrumbs?:
    | T
    | {
        slug?: T;
        path?: T;
        label?: T;
        id?: T;
      };
  title?: T;
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              page?: T;
              label?: T;
              id?: T;
            };
      };
  sections?:
    | T
    | {
        title?: T;
        subTitle?: T;
        blocks?:
          | T
          | {
              'rich-text'?:
                | T
                | {
                    text?: T;
                    id?: T;
                    blockName?: T;
                  };
              services?:
                | T
                | {
                    services?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          page?: T;
                          id?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
              testimonials?:
                | T
                | {
                    testimonials?: T;
                    id?: T;
                    blockName?: T;
                  };
              'customer-logos'?:
                | T
                | {
                    customers?: T;
                    id?: T;
                    blockName?: T;
                  };
              'featured-projects-list'?:
                | T
                | {
                    projects?: T;
                    id?: T;
                    blockName?: T;
                  };
              'projects-list'?:
                | T
                | {
                    projects?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  meta?:
    | T
    | {
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  slug?: T;
  parent?: T;
  path?: T;
  breadcrumbs?:
    | T
    | {
        slug?: T;
        path?: T;
        label?: T;
        id?: T;
      };
  customer?: T;
  startDate?: T;
  endDate?: T;
  featured?: T;
  title?: T;
  excerpt?: T;
  tags?: T;
  image?: T;
  body?: T;
  meta?:
    | T
    | {
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  slug?: T;
  parent?: T;
  path?: T;
  breadcrumbs?:
    | T
    | {
        slug?: T;
        path?: T;
        label?: T;
        id?: T;
      };
  title?: T;
  excerpt?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  websiteUrl?: T;
  name?: T;
  excerpt?: T;
  logo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  project?: T;
  title?: T;
  author?:
    | T
    | {
        name?: T;
        image?: T;
      };
  text?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  cloudinaryPublicId?: T;
  cloudinaryURL?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  sourcePath?: T;
  destinationPath?: T;
  type?: T;
  reason?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  links?:
    | {
        page: {
          relationTo: 'pages';
          value: number | Page;
        };
        label: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  links?:
    | {
        page: {
          relationTo: 'pages';
          value: number | Page;
        };
        label: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  links?:
    | T
    | {
        page?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  links?:
    | T
    | {
        page?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}