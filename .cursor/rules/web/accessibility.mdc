---
description: Astro component conventions
globs: web/src/**/*.astro
alwaysApply: false
---
# Accessibility Rules (WCAG 2.1 AA)

This project must meet **WCAG 2.1 AA** guidelines. Use this checklist during development and code reviews.

## Semantic Structure

- Use semantic HTML for structure and content:

  ```html
  <header>, <nav>, <section>, <article>, <footer>, <ul>, <li>
  ```
- Use ARIA roles only when native semantics are not possible (e.g. <div role="list">).

  ## Images

- **informative images**: use the custom <Media> component and pass the `media` prop, it includes the correct alt text
- **functional images/icons** (used in buttons or links): use `alt` or `aria-label` to describe the action/purpose of the image
- **decorative images/icons**: use `aria-hidden="true"` and `alt=""` to ensure they are not announced by screen readers

## Active state

- Use `aria-current="page"` or `aria-current="location"` for the current page (e.g. navigation, breadcrumbs, etc.)
  - then use aria-current for styling (e.g. `aria-current:font-semibold`)

## Lists

- Use semantic HTML: <ul>, <ol>, <li>
- For custom components rendering lists (e.g. list with <div>s instead of <li>), explicitly set ARIA roles:
    - `role="list"` on the container
    - `role="listitem"` on each item


## Keyboard Navigation

- All functionality **must be operable using only the keyboard**, without requiring specific timing or mouse interaction.
    - Do **not** rely solely on hover, drag, or pointer events for core interactions.

## Aria Labels

- Do NOT hardcode strings for `aria-label` or visually hidden (`sr-only`) text.
  - Instead, always use dynamic labels from the global state for consistency and localization.
  - e.g. `labels.global['skipToMainContent']`   
- Select elements must have an accessible name (e.g. `label` tag or `aria-label`)

